# /etc/nginx/conf.d/microservices.conf

# Настройка upstream'ов
upstream auth_service {
    server 176.57.215.221:8080;
}

upstream search_service {
    server 176.57.215.221:8070;
}

upstream bd_service {
    server 176.57.215.221:5000;
}

upstream dsam_service {
    server 176.57.215.221:9003;
}

upstream frontend_service {
    server 176.57.215.221:80;
}

# outsourcing-auth
server {
    listen 80;
    server_name auth.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name auth.example.com;

    ssl_certificate     /etc/ssl/certs/auth.crt;
    ssl_certificate_key /etc/ssl/private/auth.key;

    location / {
        proxy_pass http://auth_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Search+Parameters
server {
    listen 80;
    server_name search.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name search.example.com;

    ssl_certificate     /etc/ssl/certs/search.crt;
    ssl_certificate_key /etc/ssl/private/search.key;

    location / {
        proxy_pass http://search_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# BD Client-Company
server {
    listen 80;
    server_name bd.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name bd.example.com;

    ssl_certificate     /etc/ssl/certs/bd.crt;
    ssl_certificate_key /etc/ssl/private/bd.key;

    location / {
        proxy_pass http://bd_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# DS-AM service
server {
    listen 80;
    server_name dsam.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name dsam.example.com;

    ssl_certificate     /etc/ssl/certs/dsam.crt;
    ssl_certificate_key /etc/ssl/private/dsam.key;

    location / {
        proxy_pass http://dsam_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Frontend
server {
    listen 80;
    server_name platform.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name platform.example.com;

    ssl_certificate     /etc/ssl/certs/platform.crt;
    ssl_certificate_key /etc/ssl/private/platform.key;

    location / {
        proxy_pass http://frontend_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

