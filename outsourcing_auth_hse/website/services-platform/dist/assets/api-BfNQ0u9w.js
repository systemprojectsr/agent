var u=(c,t)=>()=>(t||c((t={exports:{}}).exports,t),t.exports);var p=u((l,i)=>{class h{constructor(){this.authUrl="https://auth.tomsk-center.ru",this.searchUrl="https://search.tomsk-center.ru",this.photoUrl="https://dsam.tomsk-center.ru",this.chatUrl="https://chat.tomsk-center.ru",this.token=localStorage.getItem("authToken"),this.defaultHeaders={"Content-Type":"application/json",Accept:"application/json"}}async makeRequest(t,e={}){try{const r=await fetch(t,{...e,mode:"cors",headers:{...this.defaultHeaders,...e.headers}});if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);return await r.json()}catch(r){if(console.warn("Ошибка CORS запроса:",r),r.name==="TypeError"&&r.message.includes("CORS"))try{const s=await fetch(t,{method:e.method||"GET",mode:"cors"});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);return await s.json()}catch(s){throw console.error("Критическая ошибка CORS:",s),s}throw r}}saveToken(t){this.token=t,localStorage.setItem("authToken",t)}clearToken(){this.token=null,localStorage.removeItem("authToken")}isAuthenticated(){return!!this.token}async registerClient(t,e,r,s,a=null){const o={user:{register:{full_name:t,email:e,phone:r,password:s,photo:a,type:"client"}}},n=await this.makeRequest(`${this.authUrl}/v1/register/client`,{method:"POST",body:JSON.stringify(o)});return n.user&&n.user.token&&this.saveToken(n.user.token),n}async registerCompany(t){const e={user:{register:{...t,type:"company"}}},r=await this.makeRequest(`${this.authUrl}/v1/register/company`,{method:"POST",body:JSON.stringify(e)});return r.user&&r.user.token&&this.saveToken(r.user.token),r}async login(t,e){const r={user:{login:{email:t,password_hash:e}}},s=await this.makeRequest(`${this.authUrl}/v1/login`,{method:"POST",body:JSON.stringify(r)});return s.user&&s.user.token&&this.saveToken(s.user.token),s}async getAccount(){if(!this.token)throw new Error("Токен авторизации отсутствует");const t={user:{login:{token:this.token}}};return await this.makeRequest(`${this.authUrl}/v1/account`,{method:"POST",body:JSON.stringify(t)})}async createCard(t,e){if(!this.token)throw new Error("Требуется авторизация");const r={user:{login:{token:this.token}},card:{title:t,description:e}};return await this.makeRequest(`${this.authUrl}/v1/account/card/create`,{method:"POST",body:JSON.stringify(r)})}async getCards(t=10,e=0){if(!this.token)throw new Error("Требуется авторизация");const r={user:{login:{token:this.token}}};return await this.makeRequest(`${this.authUrl}/v1/account/card/list?limit=${t}&page=${e}`,{method:"POST",body:JSON.stringify(r)})}logout(){this.clearToken()}async searchServices(t={}){const e=new URLSearchParams;t.priceFrom&&e.append("price_from",t.priceFrom),t.priceTo&&e.append("price_to",t.priceTo),t.location&&e.append("location",t.location),t.rating&&e.append("rating",t.rating),t.sort&&e.append("sort",t.sort);const r=`${this.searchUrl}/search${e.toString()?"?"+e.toString():""}`;return await this.makeRequest(r,{method:"GET"})}async getAllServices(){return await this.searchServices()}async getPopularCategories(){const t=await this.getAllServices();if(!t||!Array.isArray(t))return[];const e={};return t.forEach(r=>{const s=r.location||"Другое";e[s]||(e[s]=[]),e[s].push(r)}),Object.keys(e).map(r=>({name:r,count:e[r].length,services:e[r]}))}async uploadPhoto(t,e,r=null,s=null,a=!1){const o=new FormData;return o.append("file",t),o.append("user_id",e.toString()),r&&o.append("company_id",r.toString()),s&&o.append("task_id",s.toString()),o.append("is_task_result",a.toString()),await fetch(`${this.photoUrl}/photos/upload`,{method:"POST",body:o}).then(n=>n.json())}getPhotoUrl(t,e="original"){return`${this.photoUrl}/photos/${t}?size=${e}`}async getPhotos(t={}){const e=new URLSearchParams;t.userId&&e.append("user_id",t.userId),t.companyId&&e.append("company_id",t.companyId),t.taskId&&e.append("task_id",t.taskId),t.limit&&e.append("limit",t.limit),t.offset&&e.append("offset",t.offset);const r=`${this.photoUrl}/photos${e.toString()?"?"+e.toString():""}`;return await this.makeRequest(r,{method:"GET"})}formatPrice(t){return new Intl.NumberFormat("ru-RU",{style:"currency",currency:"RUB",minimumFractionDigits:0}).format(t)}formatRating(t){return parseFloat(t).toFixed(1)}getStarsHtml(t){const e=Math.floor(t),r=t%1>=.5,s=5-e-(r?1:0);let a="";for(let o=0;o<e;o++)a+="★";r&&(a+="☆");for(let o=0;o<s;o++)a+="☆";return a}validateEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}validatePhone(t){return/^[\+]?[7-8][\s-]?\(?\d{3}\)?[\s-]?\d{3}[\s-]?\d{2}[\s-]?\d{2}$/.test(t)}}window.serviceAPI=new h;typeof i<"u"&&i.exports&&(i.exports=h)});export default p();
