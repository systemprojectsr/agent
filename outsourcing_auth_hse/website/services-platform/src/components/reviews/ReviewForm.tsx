import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Textarea } from '../ui/textarea';
import { Label } from '../ui/label';
import { Star } from 'lucide-react';

interface ReviewFormProps {
  companyName: string;
  orderId: number;
  companyId: number;
  onSubmit: (rating: number, comment: string) => void;
  onCancel: () => void;
  isLoading?: boolean;
}

const ReviewForm: React.FC<ReviewFormProps> = ({
  companyName,
  orderId,
  companyId,
  onSubmit,
  onCancel,
  isLoading = false
}) => {
  const [rating, setRating] = useState(0);
  const [comment, setComment] = useState('');
  const [hoveredRating, setHoveredRating] = useState(0);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (rating > 0) {
      onSubmit(rating, comment);
    }
  };

  const renderStars = () => {
    return Array.from({ length: 5 }, (_, index) => {
      const starValue = index + 1;
      const isFilled = starValue <= (hoveredRating || rating);
      
      return (
        <button
          key={starValue}
          type="button"
          className={`p-1 transition-colors ${
            isFilled ? 'text-yellow-400' : 'text-gray-300'
          }`}
          onMouseEnter={() => setHoveredRating(starValue)}
          onMouseLeave={() => setHoveredRating(0)}
          onClick={() => setRating(starValue)}
        >
          <Star className={`w-8 h-8 ${isFilled ? 'fill-current' : ''}`} />
        </button>
      );
    });
  };

  const getRatingText = (rating: number) => {
    switch (rating) {
      case 1: return '–û—á–µ–Ω—å –ø–ª–æ—Ö–æ';
      case 2: return '–ü–ª–æ—Ö–æ';
      case 3: return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ';
      case 4: return '–•–æ—Ä–æ—à–æ';
      case 5: return '–û—Ç–ª–∏—á–Ω–æ';
      default: return '–ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É';
    }
  };

  return (
    <Card className="max-w-md mx-auto">
      <CardHeader>
        <CardTitle>–û—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ</CardTitle>
        <p className="text-gray-600">
          –ö–æ–º–ø–∞–Ω–∏—è: <span className="font-medium">{companyName}</span>
        </p>
        <p className="text-sm text-gray-500">–ó–∞–∫–∞–∑ #{orderId}</p>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* –†–µ–π—Ç–∏–Ω–≥ */}
          <div>
            <Label className="text-base font-medium">–û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã</Label>
            <div className="flex items-center gap-1 mt-2">
              {renderStars()}
            </div>
            <p className="text-sm text-gray-600 mt-2">
              {getRatingText(hoveredRating || rating)}
            </p>
          </div>

          {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
          <div>
            <Label htmlFor="comment" className="text-base font-medium">
              –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
            </Label>
            <Textarea
              id="comment"
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã..."
              value={comment}
              onChange={(e) => setComment(e.target.value)}
              className="mt-2 min-h-[100px]"
              maxLength={500}
            />
            <p className="text-xs text-gray-500 mt-1">
              {comment.length}/500 —Å–∏–º–≤–æ–ª–æ–≤
            </p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex gap-3">
            <Button
              type="submit"
              disabled={rating === 0 || isLoading}
              className="flex-1 bg-blue-600 hover:bg-blue-700"
            >
              {isLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'}
            </Button>
            <Button
              type="button"
              variant="outline"
              onClick={onCancel}
              disabled={isLoading}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </form>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
        <div className="mt-4 p-3 bg-blue-50 rounded-lg">
          <p className="text-sm text-blue-800">
            üí° –í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –≤—ã–±—Ä–∞—Ç—å –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, 
            –∞ –∫–æ–º–ø–∞–Ω–∏–∏ ‚Äî —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥.
          </p>
        </div>
      </CardContent>
    </Card>
  );
};

export default ReviewForm;
